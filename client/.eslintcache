[{"C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\reportWebVitals.js":"2","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\App.js":"3","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Redux\\store.js":"4","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Redux\\user\\userAction.js":"5","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Redux\\rootReducer.js":"6","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\horizantalTab\\horizantalTab.jsx":"7","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\Profile\\profile.jsx":"8","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Local_IP.js":"9","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Redux\\user\\userTypes.js":"10","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Redux\\user\\userReducer.js":"11","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\Header\\loginDialog.jsx":"12","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\Header\\registerDialog.jsx":"13","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\Explore\\explore.jsx":"14","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\Home\\home.jsx":"15","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\Bookmarks\\bookmarks.jsx":"16","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\navBar\\navBar.jsx":"17","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\profileAndDropdown\\profileAndDropdown.jsx":"18","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\Login-Signup\\LoginPage.jsx":"19","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\Login-Signup\\SignupPage.jsx":"20","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\Trends\\Trends.jsx":"21","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\verticalTab\\verticalTab.jsx":"22","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\TwitterEmbed\\TwitterEmbed.jsx":"23","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\TweetSomething\\TweetSomething.jsx":"24","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\Dropdowm\\dropdown.jsx":"25","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\WhatIsHappenSearch\\WhatisHappenSearch.jsx":"26","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\searchComp\\SearchComp.jsx":"27","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\Chat\\Chat.jsx":"28","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\groupChat\\GroupChat.jsx":"29","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\TweetBody\\TweetBody.jsx":"30","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\searchBarComments\\searchBarComments.jsx":"31","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\uploadImage\\uploadImage.jsx":"32","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\Welcome\\Welcome.jsx":"33","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\Navb\\Navb.jsx":"34","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\TweetBody\\commentLike.jsx":"35"},{"size":893,"mtime":1611582579489,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":1611364208000,"results":"38","hashOfConfig":"37"},{"size":1423,"mtime":1611780239126,"results":"39","hashOfConfig":"37"},{"size":382,"mtime":1611582579404,"results":"40","hashOfConfig":"37"},{"size":1878,"mtime":1611791465413,"results":"41","hashOfConfig":"37"},{"size":402,"mtime":1611582579403,"results":"42","hashOfConfig":"37"},{"size":5464,"mtime":1611792221949,"results":"43","hashOfConfig":"37"},{"size":1485,"mtime":1611791465376,"results":"44","hashOfConfig":"37"},{"size":47,"mtime":1611364208000,"results":"45","hashOfConfig":"37"},{"size":125,"mtime":1611791465422,"results":"46","hashOfConfig":"37"},{"size":1149,"mtime":1611791465418,"results":"47","hashOfConfig":"37"},{"size":1457,"mtime":1611779407087,"results":"48","hashOfConfig":"37"},{"size":1461,"mtime":1611779396964,"results":"49","hashOfConfig":"37"},{"size":296,"mtime":1611670144352,"results":"50","hashOfConfig":"37"},{"size":984,"mtime":1611791465371,"results":"51","hashOfConfig":"37"},{"size":323,"mtime":1611670144345,"results":"52","hashOfConfig":"37"},{"size":2091,"mtime":1611791868968,"results":"53","hashOfConfig":"37"},{"size":1127,"mtime":1611769795256,"results":"54","hashOfConfig":"37"},{"size":2552,"mtime":1611582579530,"results":"55","hashOfConfig":"37"},{"size":3481,"mtime":1611768282211,"results":"56","hashOfConfig":"37"},{"size":967,"mtime":1611670144360,"results":"57","hashOfConfig":"37"},{"size":5475,"mtime":1611791465407,"results":"58","hashOfConfig":"37"},{"size":746,"mtime":1611582579388,"results":"59","hashOfConfig":"37"},{"size":3319,"mtime":1611791465397,"results":"60","hashOfConfig":"37"},{"size":3125,"mtime":1611792716131,"results":"61","hashOfConfig":"37"},{"size":1709,"mtime":1611768282216,"results":"62","hashOfConfig":"37"},{"size":1207,"mtime":1611670144376,"results":"63","hashOfConfig":"37"},{"size":387,"mtime":1611708780518,"results":"64","hashOfConfig":"37"},{"size":1576,"mtime":1611710872420,"results":"65","hashOfConfig":"37"},{"size":7458,"mtime":1611791465386,"results":"66","hashOfConfig":"37"},{"size":2852,"mtime":1611791465402,"results":"67","hashOfConfig":"37"},{"size":1800,"mtime":1611768282220,"results":"68","hashOfConfig":"37"},{"size":450,"mtime":1611779153718,"results":"69","hashOfConfig":"37"},{"size":1355,"mtime":1611779335943,"results":"70","hashOfConfig":"37"},{"size":2163,"mtime":1611791465389,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"16uink5",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"74"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"74"},"C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\index.js",[],["156","157"],"C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\App.js",["158","159"],"import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport ScrollableTabsButtonAuto from './Components/horizantalTab/horizantalTab'\r\nimport Profile from \"./Components/Profile/profile\"\r\nimport Chat from \"../src/Components/Chat/Chat\"\r\nimport { loadUser } from './Redux/user/userAction'\r\nimport { Switch, Route, Redirect, BrowserRouter } from 'react-router-dom';\r\nimport Welcome from './Components/Welcome/Welcome.jsx'\r\nimport './App.css';\r\n\r\nconst App = ({ loadUser,isAuth }) => {\r\n\r\n  useEffect(() => {\r\n    loadUser()\r\n    \r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Switch>\r\n        <Route exact path=\"/\" render={() => <ScrollableTabsButtonAuto />} />\r\n        <Route exact path=\"/welcome\" render={() => \r\n        isAuth\r\n        ? (<Redirect to='/' />)\r\n        : (<Welcome />)} />\r\n        \r\n        <Route exact path=\"/chat\" render={() =>\r\n          !isAuth\r\n            ? (<Redirect to='/welcome' />)\r\n            : (<Chat />)} />\r\n        <Route exact path=\"/profile\" render={() =>\r\n          !isAuth\r\n            ? (<Redirect to='/welcome' />)\r\n            : (<Profile />)} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loadUser: () => dispatch(loadUser())\r\n  }\r\n}\r\nconst mapStateToProps =({user:{isAuth}})=>{\r\n  return{\r\n    isAuth\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Redux\\store.js",[],"C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Redux\\user\\userAction.js",[],"C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Redux\\rootReducer.js",[],"C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\horizantalTab\\horizantalTab.jsx",[],"C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\Profile\\profile.jsx",["160"],"import React from \"react\"\r\nimport NavBar from \"../navBar/navBar\"\r\nimport \"./profile.css\"\r\nimport Bookmarks from \"../Bookmarks/bookmarks\"\r\nimport Button from '@material-ui/core/Button';\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst Profile = ({ user }) => {\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            <div className='profile'>\r\n\r\n                <div className='backprofile__picture'></div>\r\n                <div className='homepage__text'  >\r\n                    <div className='profile__picture' ></div>\r\n                    <div className=\"profile__right \">\r\n                        <h3>{user.name.toUpperCase()}</h3>\r\n                        <div className=\"profile__follower\">\r\n                            <span><strong>2586</strong> following</span>\r\n                            <span style={{ marginLeft: \"10px\" }}><strong>2586</strong> followers</span>\r\n                        </div>\r\n                        {/* <Button variant=\"contained\" color=\"primary\">\r\n                            follow\r\n                        </Button> */}\r\n                    </div>\r\n                    <h4 className=\"profile__about\">Photographer & Film maker</h4>\r\n                </div>\r\n            </div>\r\n            <div style={{ marginTop: \"8%\" }}>\r\n                <Bookmarks />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = ({ user: { user } }) => {\r\n    return {\r\n        user\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Profile)","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Local_IP.js",[],"C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Redux\\user\\userTypes.js",[],"C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Redux\\user\\userReducer.js",[],"C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\Header\\loginDialog.jsx",[],"C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\Header\\registerDialog.jsx",[],"C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\Explore\\explore.jsx",[],"C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\Home\\home.jsx",[],"C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\Bookmarks\\bookmarks.jsx",[],"C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\navBar\\navBar.jsx",[],"C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\profileAndDropdown\\profileAndDropdown.jsx",["161","162"],"import React from 'react'\r\nimport LongMenu from \"../Dropdowm/dropdown\"\r\nimport { connect } from \"react-redux\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./profileAndDropdown.css\"\r\nconst useStyles = makeStyles((theme) => ({\r\n  purple: {\r\n    color: theme.palette.getContrastText(deepPurple[400]),\r\n    backgroundColor: deepPurple[400],\r\n    marginRight: \"5px\"\r\n  },\r\n}));\r\n\r\nconst ProfileAndDropDown = ({ user }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"profile-drop\">\r\n      <Link to=\"/profile\" style={{ textDecoration: \"none\", cursor: \"pointer\" }}>\r\n        <Avatar className={classes.purple}><img className=\"drop__image\" src={user.profilepic} />{user.name[0]}</Avatar>\r\n      </Link>\r\n      <h4 >{user.name.toUpperCase()}</h4>\r\n      <LongMenu />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ user: { user } }) => {\r\n  return {\r\n    user\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProfileAndDropDown);","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\Login-Signup\\LoginPage.jsx",["163","164"],"import React from 'react'\r\nimport { Button, TextField, ThemeProvider  } from '@material-ui/core'\r\nimport { connect } from \"react-redux\"\r\nimport {setUser} from \"../../Redux/user/userAction\"\r\n\r\n\r\nclass LogIn extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { name, value } = e.target\r\n\r\n        this.setState({ [name]: value })\r\n        // console.log(value)\r\n    }\r\n\r\n\r\n    \r\n    signUpReq = (obj) => {\r\n        // Simple POST request with a JSON body using fetch\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(obj)\r\n        };\r\n        fetch('http://localhost:5000/api/user/signin', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(!data.token){\r\n                   alert(\"Invalid Credintials\")\r\n                }else{\r\n                    localStorage.setItem('Authorization',data.token)\r\n                    this.props.handleClose()\r\n                    this.props.setUser(data.user)\r\n                    this.setState({email: '',password: ''})\r\n                }\r\n\r\n            })\r\n            .catch(err=> alert(\"Invalid Credintials\"))\r\n    }\r\n\r\n    signUp = (e) => {\r\n        e.preventDefault()\r\n        this.signUpReq(this.state)\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const { name, email, password } = this.state\r\n        return (\r\n\r\n            <form className='login' onSubmit={this.signUp}>\r\n                <TextField className='Input'\r\n                    label='Email'\r\n                    type='email'\r\n                    name='email'\r\n                    value={email}\r\n                    onChange={this.handleChange}\r\n                    required\r\n                />\r\n                <br />\r\n                <TextField className='Input'\r\n                    label='Password'\r\n                    type='password'\r\n                    name='password'\r\n                    value={password}\r\n                    onChange={this.handleChange}\r\n                    required\r\n                />\r\n\r\n                <Button type='submit' className='dialog_button'  > Sign In </Button>\r\n                </form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n        setUser:user=>dispatch(setUser(user))\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(LogIn)\r\n","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\Login-Signup\\SignupPage.jsx",[],"C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\Trends\\Trends.jsx",[],"C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\verticalTab\\verticalTab.jsx",[],"C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\TwitterEmbed\\TwitterEmbed.jsx",["165","166"],"import React from \"react\";\r\nimport \"./TwitterEmbed.css\";\r\nimport {\r\n    TwitterTimelineEmbed,\r\n    TwitterShareButton,\r\n    TwitterTweetEmbed,\r\n} from \"react-twitter-embed\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nfunction Widgets() {\r\n    return (\r\n        <div className=\"widgets\">\r\n            <div className=\"widgets__widgetContainer\">\r\n                <h2>What's happening</h2>\r\n\r\n                <TwitterTweetEmbed tweetId={\"858551177860055040\"} />\r\n\r\n                <TwitterTimelineEmbed\r\n                    sourceType=\"profile\"\r\n                    screenName=\"AndreiNeagoie\"\r\n                    options={{ height: 400 }}\r\n                />\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Widgets;\r\n","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\TweetSomething\\TweetSomething.jsx",["167","168"],"import React, { useState } from \"react\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport WhatisHappenSearch from \"../WhatIsHappenSearch/WhatisHappenSearch\"\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport Button from '@material-ui/core/Button';\r\nimport \"./TweetSomething.css\"\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport CloudImage from \"../uploadImage/uploadImage\"\r\nimport {connect} from \"react-redux\"\r\n\r\nconst TweetSomething = ({user}) => {\r\n    const isActive=useMediaQuery('(max-width:900px)')\r\n    const [input,setInput]=useState(\"\")\r\n    const [image,setImage]=useState(\"\")\r\n    console.log(\"user\",user)\r\n    const handleInputChange=(data)=>{\r\n        setInput(data)\r\n    }\r\n    const handleImageChange=async(data)=>{\r\n        await setImage(data)\r\n    }\r\n    const handleButtonClick=async(e)=>{\r\n        e.preventDefault()\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json'},\r\n            body: JSON.stringify({userid:user.id,caption:input,img:image }) \r\n        };\r\n        const res = await fetch(`http://localhost:5000/api/tweets/tweet`, requestOptions)\r\n        const data = await res.json()\r\n        setInput(\"\")\r\n        setImage(\"\")\r\n    }\r\n    return (\r\n        <div className=\"tweet-something\">\r\n            <h3 className='tweet-something__text'>Tweet Something </h3>\r\n            <div className='tweet-something__body' >\r\n                <Avatar ><img className='avatar__image'  src={user&& user.profilepic} /></Avatar>\r\n                <div className='text__input'>\r\n                    <WhatisHappenSearch handleInputChange={handleInputChange} inputVal={input} />\r\n                    <div className='last__line'>\r\n                        <div className='last__center'>\r\n                            <CloudImage handleImageChange={handleImageChange}/>\r\n                            {/* <ImageIcon color=\"primary\" /> */}\r\n                            <div className='everyone'>\r\n                                <PublicIcon color=\"primary\" />\r\n                                {\r\n                                    !isActive?\r\n                                    <small style={{ paddingLeft: \"5px\" }}>Everyone can reply</small>\r\n                                    :\r\n                                    <></>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <Button variant=\"contained\" color=\"primary\" style={{marginRight:\"0.5rem\"}} onClick={handleButtonClick}>\r\n                            Tweet\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nconst mapStateToProps=({user:{user}})=>{\r\n    return {\r\n        user\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(TweetSomething)","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\Dropdowm\\dropdown.jsx",[],"C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\WhatIsHappenSearch\\WhatisHappenSearch.jsx",[],"C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\searchComp\\SearchComp.jsx",[],["169","170"],"C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\Chat\\Chat.jsx",[],"C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\groupChat\\GroupChat.jsx",["171","172"],"import React, { useState } from \"react\"\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport \"./GroupChat.css\"\r\n\r\nconst messages = [{ received: 'yes', name: 'halasalhab', message: 'trying', timestamp: '12AM' }, { received: 'yes', name: 'halasalhab', message: 'trying', timestamp: '12AM' }]\r\nfunction GroupChat() {\r\n    const [input, setInput] = useState('');\r\n    const SendMessage = async (e) => {\r\n        e.preventDefault();\r\n        setInput(\"\");\r\n    }\r\n    return (\r\n\r\n        <div className=\"chat\">\r\n            <div className=\"chat__header\">\r\n                <div className=\"chat__headerInfo\">\r\n                    <h3>Wellcome to group chat</h3>\r\n                </div>\r\n            </div>\r\n            <div className=\"chat__body\">\r\n                {messages.map((message) => (\r\n                    <p className={`chat__message ${message.received && \"chat__reciever\"}`}>\r\n                        <span className=\"chat__name\">{message.name}</span>\r\n                        {message.message}\r\n                        <span className=\"chat__timestamp\">\r\n                        {message.timestamp}</span>\r\n                    </p>\r\n                ))}\r\n            </div>\r\n            <div className=\"chat__footer\">\r\n                <from>\r\n                    <input value={input} onChange={(e) => setInput(e.target.value)} placeholder=\"Type a message\" type=\"text\" ></input>\r\n                    <button onClick={SendMessage} type=\"submit\">🕊️</button>\r\n                </from>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default GroupChat","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\TweetBody\\TweetBody.jsx",["173","174","175","176","177"],"import React, { useState, useEffect } from \"react\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport TweetBodyImage from \"../../assets/nature.jpg\"\r\nimport { connect } from \"react-redux\"\r\nimport { Link } from 'react-router-dom';\r\nimport \"./TweetBody.css\"\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport SearchBar from \"../searchBarComments/searchBarComments\"\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport CommentLike from \"./commentLike\"\r\nimport { reloadIt,loadUser } from '../../Redux/user/userAction'\r\n\r\nconst TweetBody = ({ user,reloadIt,reloadme,loadUser, tweetResult }) => {\r\n    const isActive = useMediaQuery('(max-width:900px)')\r\n    const [like, setLike] = useState(\"\")\r\n    const [retweet, setRetweet] = useState(\"\")\r\n    const [save, setSave] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        loadUser()\r\n    }, [reloadme])\r\n\r\n    const handleLike = async () => {\r\n        reloadIt()\r\n        setLike(like === \"\" ? \"red\" : \"\")\r\n        if (like === \"\") {//add to book mark\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ userid: user.id, tweetid: tweetResult._id })\r\n            };\r\n            const res = await fetch(`http://localhost:5000/api/user/likes`, requestOptions)\r\n            const data = await res.json()\r\n            await reloadIt()\r\n        } else {//remove from book mark\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ userid: user.id })\r\n            };\r\n            const res = await fetch(`http://localhost:5000/api/user/unlike`, requestOptions)\r\n            const data = await res.json()\r\n            await reloadIt()\r\n        }\r\n    }\r\n    const handleRetweet = async () => {\r\n        reloadIt()\r\n        setRetweet(retweet === \"\" ? \"green\" : \"\")\r\n        if (retweet === \"\") {//add to book mark\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ userid: user.id, tweetid: tweetResult._id })\r\n            };\r\n            const res = await fetch(`http://localhost:5000/api/user/retweet`, requestOptions)\r\n            const data = await res.json()\r\n            await reloadIt()\r\n        }\r\n    }\r\n\r\n    const handleSave = async () => {\r\n        reloadIt()\r\n        setSave(save === \"\" ? \"blue\" : \"\")\r\n        if (save === \"\") {//add to book mark\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ userid: user.id, tweetid: tweetResult._id })\r\n            };\r\n            const res = await fetch(`http://localhost:5000/api/user/addBookmark`, requestOptions)\r\n            const data = await res.json()\r\n            await reloadIt()\r\n        } else {//remove from book mark\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ userid: user.id })\r\n            };\r\n            const res = await fetch(`http://localhost:5000/api/user/deleteBookmark`, requestOptions)\r\n            const data = await res.json()\r\n            await reloadIt()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"tweet-body\">\r\n            <div className=\"tweet__top\" >\r\n                <Link to=\"/profile\" className=\"twet__top__image\">\r\n                    <Avatar ><img className=\" avatar__image\" src={user && user.profilepic} />{user&& user.name[0]}</Avatar>\r\n                </Link>\r\n\r\n                <div className='top__date'>\r\n                    <h4 style={{ margin: \"0px\" }} >{user && user.name.toUpperCase()}</h4>\r\n                    <h5 style={{ margin: \"0px\", color: \"gray\" }}>{tweetResult.createdAt.split(\"T\")[0]}</h5>\r\n                </div>\r\n            </div>\r\n            <h4 style={{ color: \"gray\" }}>\r\n                {tweetResult.caption}\r\n            </h4>\r\n            {\r\n                tweetResult.img?\r\n                <img className=\"tweet__image\" src={tweetResult.img} />\r\n                :<></>\r\n            }\r\n\r\n            <div className=\"comments-saves \">\r\n                <h5 style={{ marginRight: \"10px\" }}>{tweetResult.comments.length} comments</h5>\r\n                <h5 style={{ marginRight: \"10px\" }}>{tweetResult.likes ? tweetResult.likes : 0} likes</h5>\r\n                <h5 style={{ marginRight: \"10px\" }}>{tweetResult.retweets ? tweetResult.retweets : 0} retweets</h5>\r\n                <h5>{tweetResult.saved ? tweetResult.saved : 0} saves</h5>\r\n            </div>\r\n            <div className='comments-sec'>\r\n                <div>\r\n                    <ChatBubbleOutlineIcon />\r\n                    {\r\n                        !isActive ?\r\n                            <h4 style={{ marginLeft: \"0.5rem\", alignItems: \"center\" }}>Comment</h4>\r\n                            :\r\n                            <></>\r\n                    }\r\n                </div>\r\n                <div style={{ color: retweet }} onClick={handleRetweet}>\r\n                    <LoopIcon />\r\n                    {\r\n                        !isActive ?\r\n                            <h4 style={{ marginLeft: \"0.5rem\" }}>Retweeted</h4>\r\n                            :\r\n                            <></>\r\n                    }\r\n\r\n                </div>\r\n                <div style={{ color: like }} onClick={handleLike}>\r\n                    <FavoriteBorderIcon />\r\n                    {\r\n                        !isActive ?\r\n                            <h4 style={{ marginLeft: \"0.5rem\" }}>Liked</h4>\r\n                            :\r\n                            <></>\r\n                    }\r\n\r\n                </div>\r\n                <div style={{ color: save }} onClick={handleSave}>\r\n                    <BookmarkBorderIcon />\r\n                    {\r\n                        !isActive ?\r\n                            <h4 style={{ marginLeft: \"0.5rem\" }}>Saved</h4>\r\n                            :\r\n                            <></>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"profile-comment\" >\r\n                <Link to=\"/profile\" className=\"profile-link\">\r\n                    <Avatar ><img className=\"avatar__image\" src={user.profilepic} />{user.name[0]}</Avatar>\r\n                </Link>\r\n                <SearchBar tweetid={tweetResult._id} />\r\n            </div>\r\n            {\r\n                tweetResult.comments && tweetResult.comments.map(comment => {\r\n                    return (\r\n\r\n                        <CommentLike comment={comment} user={user} />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\nconst mapStateToProps = ({ user: { user,reloadme } }) => {\r\n    return {\r\n        user,\r\n        reloadme\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        reloadIt: () => dispatch(reloadIt()),\r\n        loadUser: () => dispatch(loadUser()),\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TweetBody)","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\searchBarComments\\searchBarComments.jsx",["178"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloudImage from \"../uploadImage/uploadImage\"\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { connect } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: \"100%\",\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n}));\r\n\r\nconst CustomizedInputBase = function ({ tweetid, user }) {\r\n  const classes = useStyles();\r\n  const [input, setInput] = useState(\"\")\r\n  const [image, setImage] = useState(\"\")\r\n  console.log(input)\r\n  const handleInputChange = (e) => {\r\n    setInput(e.target.value)\r\n  }\r\n  const handleImageChange = async (data) => {\r\n    await setImage(data)\r\n  }\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ userid: user.id, tweetid: tweetid, comment: input, img: image })\r\n    };\r\n    const res = await fetch(`http://localhost:5000/api/comments/comment`, requestOptions)\r\n    const data = await res.json()\r\n    setInput(\"\")\r\n    setImage(\"\")\r\n  }\r\n  return (\r\n    <Paper component=\"form\" className={classes.root}  >\r\n\r\n      <InputBase\r\n        className={classes.input}\r\n        placeholder=\"Comment here.....\"\r\n        inputProps={{ 'aria-label': 'search google maps' }}\r\n        onChange={handleInputChange}\r\n        value={input}\r\n      />\r\n      <Divider className={classes.divider} orientation=\"vertical\" />\r\n      <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"directions\">\r\n        <CloudImage handleImageChange={handleImageChange} />\r\n      </IconButton>\r\n      <Divider className={classes.divider} orientation=\"vertical\" />\r\n      <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"directions\" onClick={handleSubmit}>\r\n        <SendIcon />\r\n      </IconButton>\r\n    </Paper>\r\n  );\r\n}\r\nconst mapStateToProps = ({ user: { user } }) => {\r\n  return {\r\n    user\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(CustomizedInputBase)\r\n","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\uploadImage\\uploadImage.jsx",["179","180"],"import React, { useState } from 'react';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport \"./uploadImage.css\"\r\nconst CloudImage = ({handleImageChange}) => {\r\n\r\n  const [loading, setLoading] = useState(false)\r\n\r\n\r\n  const uploadImage = (e) => {\r\n    const formData = new FormData()\r\n    formData.append('file', e.target.files[0])\r\n    formData.append('upload_preset', 'pqcz20rh')\r\n\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      body: formData\r\n    };\r\n    fetch('\thttps://api.cloudinary.com/v1_1/dzjchtsxn/image/upload', requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        handleImageChange(data.secure_url)\r\n        alert(\"image is uploaded\")\r\n      });\r\n\r\n  }\r\n\r\n//   const updateImage = (obj) => {\r\n//     const requestOptions = {\r\n//       method: 'POST',\r\n//       headers: { 'Content-Type': 'application/json' },\r\n//       body: JSON.stringify(obj)\r\n//     };\r\n//     if (role === 'patient') {\r\n//       fetch('http://127.0.0.1:8000/patient/upload', requestOptions)\r\n//         .then(response => response.json())\r\n//         .then(data => console.log(data));\r\n//     }\r\n//     if (role === 'doctor') {\r\n//       fetch('http://127.0.0.1:8000/doctor/update', requestOptions)\r\n//         .then(response => response.json())\r\n//         .then(data => console.log(data));\r\n//     }\r\n\r\n//   }\r\n\r\n\r\n\r\n  return (\r\n        <div className=\"user_upload\">\r\n          <input\r\n            type=\"file\"\r\n            id=\"file\"\r\n            name=\"file\"\r\n            className='user_inputfile'\r\n            onChange={uploadImage}\r\n            accept=\"image/*\"\r\n          />\r\n          <label for=\"file\" style={{cursor:\"pointer\"}}>\r\n          <ImageIcon  color=\"primary\"/>\r\n          </label>\r\n        </div>\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\nexport default CloudImage;\r\n","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\Welcome\\Welcome.jsx",[],"C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\Navb\\Navb.jsx",["181"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { Link } from 'react-router-dom'; \r\nimport \"../Header/style.css\"\r\nimport \"./Navb.css\"\r\nimport MaxWidthDialog from '../Header/registerDialog.jsx'\r\nimport MaxWidthDialog2 from '../Header/loginDialog.jsx'\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    nav:{\r\n        maxHeight: \"70px\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n    }\r\n}));\r\n\r\n\r\nconst Navb = function () {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root} >\r\n\r\n            <AppBar position=\"static\" color=\"default\" className={classes.nav}  >\r\n                <Link to=\"/welcome\" style={{ cursor: \"pointer\" }}>\r\n                    <img className='header__logo' src='https://icons-for-free.com/iconfiles/png/512/twitter+twitter+button+twitter+logo+icon-1320190501026673072.png' alt='Twitter' />\r\n                </Link>\r\n                <div className='header__taps'style={{justifyItems:'space-between'}}>\r\n                    <MaxWidthDialog/>\r\n                    <MaxWidthDialog2/>\r\n                </div>\r\n                \r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navb","C:\\Users\\HP\\Desktop\\RBK-IMR\\twitter\\client\\src\\Components\\TweetBody\\commentLike.jsx",["182","183","184","185","186","187"],"import React, { useState } from \"react\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport TweetBodyImage from \"../../assets/nature.jpg\"\r\nimport { connect } from \"react-redux\"\r\nimport { Link } from 'react-router-dom';\r\nimport \"./TweetBody.css\"\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\n\r\n\r\nconst CommentLike = ({ comment, user }) => {\r\n    const [commentLike, setCommentLike] = useState(\"\")\r\n\r\n\r\n    const handleCommentLike = () => {\r\n        setCommentLike(commentLike === \"\" ? \"red\" : \"\")\r\n    }\r\n    return (\r\n        <div className=\"profile-othercomment\" >\r\n            <Link to=\"/profile\" className=\"profile-link\">\r\n                <Avatar ><img className=\"avatar__image\" src={comment.userid.profilepic} />{user.name[0]}</Avatar>\r\n            </Link>\r\n            <div style={{ marginLeft: \"1rem\",height:\"0%\" }}>\r\n\r\n                <div className=\"tweet__top\" >\r\n                    <h4 style={{ margin: \"0px\" }} >{user && user.name.toUpperCase()}</h4>\r\n                    <h5 style={{ margin: \"0px\", color: \"gray\", marginLeft: \"1rem\" }}>{comment.createdAt.split(\"T\")[0]}</h5>\r\n                    {/* <h5 style={{ margin: \"0px\", color: \"gray\", marginLeft: \"1rem\" }}>24 Augest 20:34</h5> */}\r\n                </div>\r\n                <h4 className=\"actual-comment\" >{comment.comment}</h4>\r\n                {\r\n                    comment.img?\r\n                    <img src={comment.img} style={{maxWidth:\"30%\",maxHeight:\"40%\"}}/>\r\n                    :<></>\r\n                }\r\n                <div className=\"like-comment\">\r\n\r\n                    <div className=\"like-icon\" style={{ color: commentLike }} onClick={handleCommentLike}>\r\n                        <FavoriteBorderIcon />\r\n                        <h4 style={{ margin: \"0px\", marginLeft: \"0.5rem\" }}>Liked </h4>\r\n                    </div>\r\n                    <h4 style={{ margin: \"0px\", marginLeft: \"2rem\" }} > {0 || comment.likes} Likes</h4>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default CommentLike",{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":7,"column":35,"nodeType":"194","messageId":"195","endLine":7,"endColumn":48},{"ruleId":"196","severity":1,"message":"197","line":16,"column":6,"nodeType":"198","endLine":16,"endColumn":8,"suggestions":"199"},{"ruleId":"192","severity":1,"message":"200","line":5,"column":8,"nodeType":"194","messageId":"195","endLine":5,"endColumn":14},{"ruleId":"192","severity":1,"message":"201","line":6,"column":10,"nodeType":"194","messageId":"195","endLine":6,"endColumn":20},{"ruleId":"202","severity":1,"message":"203","line":23,"column":44,"nodeType":"204","endLine":23,"endColumn":97},{"ruleId":"192","severity":1,"message":"205","line":2,"column":29,"nodeType":"194","messageId":"195","endLine":2,"endColumn":42},{"ruleId":"192","severity":1,"message":"206","line":58,"column":17,"nodeType":"194","messageId":"195","endLine":58,"endColumn":21},{"ruleId":"192","severity":1,"message":"207","line":5,"column":5,"nodeType":"194","messageId":"195","endLine":5,"endColumn":23},{"ruleId":"192","severity":1,"message":"208","line":8,"column":8,"nodeType":"194","messageId":"195","endLine":8,"endColumn":18},{"ruleId":"192","severity":1,"message":"209","line":30,"column":15,"nodeType":"194","messageId":"195","endLine":30,"endColumn":19},{"ruleId":"202","severity":1,"message":"203","line":38,"column":26,"nodeType":"204","endLine":38,"endColumn":89},{"ruleId":"188","replacedBy":"210"},{"ruleId":"190","replacedBy":"211"},{"ruleId":"192","severity":1,"message":"212","line":2,"column":10,"nodeType":"194","messageId":"195","endLine":2,"endColumn":16},{"ruleId":"192","severity":1,"message":"213","line":2,"column":18,"nodeType":"194","messageId":"195","endLine":2,"endColumn":28},{"ruleId":"192","severity":1,"message":"214","line":3,"column":8,"nodeType":"194","messageId":"195","endLine":3,"endColumn":22},{"ruleId":"202","severity":1,"message":"203","line":23,"column":30,"nodeType":"204","endLine":23,"endColumn":86},{"ruleId":"202","severity":1,"message":"203","line":34,"column":13,"nodeType":"204","endLine":34,"endColumn":67},{"ruleId":"202","severity":1,"message":"203","line":83,"column":30,"nodeType":"204","endLine":83,"endColumn":85},{"ruleId":"202","severity":1,"message":"203","line":93,"column":30,"nodeType":"204","endLine":93,"endColumn":95},{"ruleId":"192","severity":1,"message":"209","line":50,"column":11,"nodeType":"194","messageId":"195","endLine":50,"endColumn":15},{"ruleId":"192","severity":1,"message":"215","line":6,"column":10,"nodeType":"194","messageId":"195","endLine":6,"endColumn":17},{"ruleId":"192","severity":1,"message":"216","line":6,"column":19,"nodeType":"194","messageId":"195","endLine":6,"endColumn":29},{"ruleId":"192","severity":1,"message":"217","line":9,"column":8,"nodeType":"194","messageId":"195","endLine":9,"endColumn":19},{"ruleId":"192","severity":1,"message":"214","line":3,"column":8,"nodeType":"194","messageId":"195","endLine":3,"endColumn":22},{"ruleId":"192","severity":1,"message":"218","line":4,"column":10,"nodeType":"194","messageId":"195","endLine":4,"endColumn":17},{"ruleId":"192","severity":1,"message":"219","line":7,"column":8,"nodeType":"194","messageId":"195","endLine":7,"endColumn":29},{"ruleId":"192","severity":1,"message":"220","line":8,"column":8,"nodeType":"194","messageId":"195","endLine":8,"endColumn":16},{"ruleId":"202","severity":1,"message":"203","line":22,"column":26,"nodeType":"204","endLine":22,"endColumn":91},{"ruleId":"202","severity":1,"message":"203","line":34,"column":21,"nodeType":"204","endLine":34,"endColumn":86},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array. If 'loadUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["223"],"'Button' is defined but never used.","'deepOrange' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ThemeProvider' is defined but never used.","'name' is assigned a value but never used.","'TwitterShareButton' is defined but never used.","'SearchIcon' is defined but never used.","'data' is assigned a value but never used.",["221"],["222"],"'Avatar' is defined but never used.","'IconButton' is defined but never used.","'TweetBodyImage' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'TwitterIcon' is defined but never used.","'connect' is defined but never used.","'ChatBubbleOutlineIcon' is defined but never used.","'LoopIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"224","fix":"225"},"Update the dependencies array to be: [loadUser]",{"range":"226","text":"227"},[559,561],"[loadUser]"]